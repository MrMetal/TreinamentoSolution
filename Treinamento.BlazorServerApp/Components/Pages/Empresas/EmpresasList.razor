@page "/EmpresasList"
@using Microsoft.AspNetCore.Authorization
@using Treinamento.BlazorServerApp.Data.Endpoints.Empresas
@using Treinamento.Shared.Results
@using Treinamento.BlazorServerApp.Components.Pages.Componentes
@using Treinamento.BlazorServerApp.Data

@attribute [Authorize(Policy = AppPolicies.PermissaoRead)]

@inject ObterTodasEmpresasEndpoint ObterTodasEmpresasEndpoint

<PageTitle>Empresas</PageTitle>

<h1>Empresas</h1>

@if (_empresas.Length == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <DeleteModal TItem="EmpresaResult"
                            Titulo="Confirmar Exclusão"
                            Mensagem="Tem certeza que deseja excluir a empresa selecionada?"
                            Exibir="@MostrarModal"
                            OnConfirmar="OnConfirmacaoModal" />

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome</th>
                <th>Razão Social</th>
                <th>Opções</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in _empresas)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Nome</td>
                    <td>@item.RazaoSocial</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => ViewItem(item.Id)">View</button>
                        <button class="btn btn-warning" @onclick="() => EditItem(item.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => PedirConfirmacao(item)">Delete</button>
                    </td>
                </tr>

            }

        </tbody>
    </table>
}

@code {

    private EmpresaResult[] _empresas = [];
    private bool MostrarModal;
    private EmpresaResult? EmpresaSelecionada;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500); // Simulação de carregamento
        _empresas = await ObterTodasEmpresasEndpoint.ExecuteAsync();
    }

    private void PedirConfirmacao(EmpresaResult empresa)
    {
        EmpresaSelecionada = empresa;
        MostrarModal = true;
    }

    private void ViewItem(Guid id)
    {
        NavigationManager.NavigateTo($"/EmpresaDetail/{id}");
    }

    private static void EditItem(Guid id)
    {
        // lógica para editar o item
    }

    private void OnConfirmacaoModal(bool confirmado)
    {
        if (confirmado && EmpresaSelecionada != null)
        {
            //Aqui chama o endpoint de delete
        }

        MostrarModal = false;
        EmpresaSelecionada = null;
    }
}