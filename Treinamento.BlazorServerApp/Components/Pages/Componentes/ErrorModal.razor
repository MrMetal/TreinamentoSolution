@code {
    [Parameter] public string Title { get; set; } = "Erro";
    [Parameter] public string Message { get; set; } = "Ocorreu um erro.";
    [Parameter] public EventCallback OnClose { get; set; }

    private void Close() => OnClose.InvokeAsync();
}

<div class="modal-backdrop">
    <div class="modal-content">
        <h2>@Title</h2>
        <p>@Message</p>
        <button @onclick="Close">Tentar novamente</button>
    </div>
</div>

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .modal-content {
        background-color: white;
        padding: 2rem;
        border-radius: 10px;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    }

        .modal-content h2 {
            margin-top: 0;
        }

        .modal-content p {
            word-wrap: break-word;
            overflow-wrap: break-word;
            max-height: 300px;
            overflow-y: auto;
        }

</style>